<?phpnamespace App\Http\Controllers\Client\User\Address;use App\Http\Controllers\Controller;use App\Models\ClientAddress;use App\Services\Client\Contracts as Contacts;use App\Services\Client\Dto\ClientAddress\StoreDtoFactory;use App\Services\Client\Dto\ClientAddress\UpdateDtoFactory;use App\Services\Client\Requests\ClientAddress\StoreRequest;use App\Services\Client\Requests\ClientAddress\UpdateRequest;use App\Services\Client\Resources\ClientAddress\AllResource;use App\Services\Client\Resources\ClientAddress\EditResource;use Illuminate\Http\Response;class AddressController extends Controller{    public function index()    {        $response = app(Contacts\GetAllAddress::class)->execute();        return AllResource::collection($response);    }    public function store(StoreRequest $request)    {        app(Contacts\CreateAddress::class)            ->execute(StoreDtoFactory::fromRequest($request));        return response()->json(['message' => 'Your Address saved successfully '], Response::HTTP_OK);    }    public function edit(ClientAddress $address): EditResource    {        return new EditResource($address);    }    public function update(ClientAddress $address, UpdateRequest $request)    {        app(Contacts\UpdateAddress::class)            ->execute($address, UpdateDtoFactory::fromRequest($request));        return response()->json(['message' => 'Your Address updated successfully'], Response::HTTP_OK);    }    public function destroy(ClientAddress $address)    {        app(Contacts\DestroyAddress::class)->execute($address);        return response()->json(['message' => 'Your Address deleted successfully'], Response::HTTP_NO_CONTENT);    }}